#!/usr/bin/python
# Script Name: pharos-uninstall.py
# Script Function:
#	This script will uninstall pharos remote printing from the system.
#	The following tasks will be performed:
#	1. Remove the pharos backend from cups backend directory
#	2. Remove the popup scripts from /usr/local/bin/pharospopup
#	3. Remove the config file from /usr/local/etc/
#	4. Remove the uninstall script from /usr/local/bin/
#	5. Remove the users desktop environment autorun settings for running pharospoup at login
#	6. Delete the print queues that use pharos backend
#	
# Usage: 
#	$sudo python pharos-uninstall
#		This will uninstall the pharos remote printing
#
# Author: Junaid Ali
# Version: 1.0

# Imports ===============================
import logging
import sys
import os

# Script Variables ======================
logFile = '/tmp/pharosuninstall.log'
uninstallerSharedLibraryDIR = '/usr/local/lib/pharos'
cleanupFile = '/tmp/pharoscleanup.sh'

# Functions =============================
def createCleanupFile(cleanupFile):
	"""
	Creates a cleanup file
	"""	
	pharosUninstallerExe = '/usr/local/bin/pharos-uninstall'
	logger.info('Creating cleanup file %s' %cleanupFile)
	cleanupFileHandle = open(cleanupFile, 'w')
	cleanupFileHandle.writelines('#!/bin/sh\n')
	cleanupFileHandle.writelines('sleep 1s\n')
	cleanupFileHandle.writelines('rm %s\n' %pharosUninstallerExe)
	cleanupFileHandle.close()
	logger.info('successfully created cleanup file %s' %cleanupFile)

# Main Script ============================

# Create logger
logger = logging.getLogger('pharos-uninstaller')
logger.setLevel(logging.DEBUG)
# Create file handler
fh = logging.FileHandler(logFile)
fh.setLevel(logging.DEBUG)
# create console handler
ch = logging.StreamHandler()
ch.setLevel(logging.DEBUG)
formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
fh.setFormatter(formatter)
ch.setFormatter(formatter)
# add loggers
logger.addHandler(fh)
logger.addHandler(ch)

# imports
sys.path.append(os.getcwd())
if os.path.exists(uninstallerSharedLibraryDIR):
	sys.path.append(uninstallerSharedLibraryDIR)
		
try:	
	from printerutils import PrinterUtility
except:
	logger.error('Cannot import module printerutil from current directory')	
	sys.exit(1)

try:	
	from processutils import ProcessUtility
except:
	logger.error('Cannot import module processutil from current directory')	
	sys.exit(1)

try:	
	from pharosuninstall import PharosUninstaller
except:
	logger.error('Cannot import module printerutil')
	sys.exit(0)

printerUtility = PrinterUtility(logger)
processUtility = ProcessUtility(logger)
pharosUninstaller = PharosUninstaller(logger, printerUtility, processUtility)

if __name__ == "__main__":
	if pharosUninstaller.uninstall():
		logger.info('Uninstaller terminated successfully')
		createCleanupFile(cleanupFile)
		if os.path.exists(cleanupFile):
			logger.info('Running cleanup file %s' %cleanupFile)
			pid = subprocess.Popen([cleanupFile]).pid			
	else:
		logger.warn('The uninstaller did not complete successfully')
